# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name:  Short Unit Tests

on:
  push:
    branches-ignore: # master and develop run complete test by other workflow
      - master
      - develop

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'never'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/docs/**", "Docker", "Dockerfile*"]'
          do_not_skip: '["workflow_dispatch"]'

  build_and_unittest:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Install dependencies
      run: |
        sudo apt-get install -y jq m4 make cmake

    - name: Build
      run: make

    - name: Short Unit Tests
      run: go test -short -timeout 999s -v ./...
