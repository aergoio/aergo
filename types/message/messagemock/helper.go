// Code generated by MockGen. DO NOT EDIT.
// Source: message/msghelper.go

// Package messagemock is a generated GoMock package.
package messagemock

import (
	types "github.com/aergoio/aergo/v2/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Helper is a mock of Helper interface
type Helper struct {
	ctrl     *gomock.Controller
	recorder *HelperMockRecorder
}

// HelperMockRecorder is the mock recorder for Helper
type HelperMockRecorder struct {
	mock *Helper
}

// NewHelper creates a new mock instance
func NewHelper(ctrl *gomock.Controller) *Helper {
	mock := &Helper{ctrl: ctrl}
	mock.recorder = &HelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Helper) EXPECT() *HelperMockRecorder {
	return m.recorder
}

// ExtractBlockFromResponseAndError mocks base method
func (m *Helper) ExtractBlockFromResponseAndError(rawResponse interface{}, err error) (*types.Block, error) {
	ret := m.ctrl.Call(m, "ExtractBlockFromResponseAndError", rawResponse, err)
	ret0, _ := ret[0].(*types.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractBlockFromResponseAndError indicates an expected call of ExtractBlockFromResponseAndError
func (mr *HelperMockRecorder) ExtractBlockFromResponseAndError(rawResponse, err interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractBlockFromResponseAndError", reflect.TypeOf((*Helper)(nil).ExtractBlockFromResponseAndError), rawResponse, err)
}

// ExtractBlockFromResponse mocks base method
func (m *Helper) ExtractBlockFromResponse(rawResponse interface{}) (*types.Block, error) {
	ret := m.ctrl.Call(m, "ExtractBlockFromResponse", rawResponse)
	ret0, _ := ret[0].(*types.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractBlockFromResponse indicates an expected call of ExtractBlockFromResponse
func (mr *HelperMockRecorder) ExtractBlockFromResponse(rawResponse interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractBlockFromResponse", reflect.TypeOf((*Helper)(nil).ExtractBlockFromResponse), rawResponse)
}

// ExtractTxFromResponseAndError mocks base method
func (m *Helper) ExtractTxFromResponseAndError(rawResponse interface{}, err error) (*types.Tx, error) {
	ret := m.ctrl.Call(m, "ExtractTxFromResponseAndError", rawResponse, err)
	ret0, _ := ret[0].(*types.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractTxFromResponseAndError indicates an expected call of ExtractTxFromResponseAndError
func (mr *HelperMockRecorder) ExtractTxFromResponseAndError(rawResponse, err interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractTxFromResponseAndError", reflect.TypeOf((*Helper)(nil).ExtractTxFromResponseAndError), rawResponse, err)
}

// ExtractTxFromResponse mocks base method
func (m *Helper) ExtractTxFromResponse(rawResponse interface{}) (*types.Tx, error) {
	ret := m.ctrl.Call(m, "ExtractTxFromResponse", rawResponse)
	ret0, _ := ret[0].(*types.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractTxFromResponse indicates an expected call of ExtractTxFromResponse
func (mr *HelperMockRecorder) ExtractTxFromResponse(rawResponse interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractTxFromResponse", reflect.TypeOf((*Helper)(nil).ExtractTxFromResponse), rawResponse)
}

// ExtractTxsFromResponseAndError mocks base method
func (m *Helper) ExtractTxsFromResponseAndError(rawResponse interface{}, err error) ([]*types.Tx, error) {
	ret := m.ctrl.Call(m, "ExtractTxsFromResponseAndError", rawResponse, err)
	ret0, _ := ret[0].([]*types.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractTxsFromResponseAndError indicates an expected call of ExtractTxsFromResponseAndError
func (mr *HelperMockRecorder) ExtractTxsFromResponseAndError(rawResponse, err interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractTxsFromResponseAndError", reflect.TypeOf((*Helper)(nil).ExtractTxsFromResponseAndError), rawResponse, err)
}

// ExtractTxsFromResponse mocks base method
func (m *Helper) ExtractTxsFromResponse(rawResponse interface{}) ([]*types.Tx, error) {
	ret := m.ctrl.Call(m, "ExtractTxsFromResponse", rawResponse)
	ret0, _ := ret[0].([]*types.Tx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractTxsFromResponse indicates an expected call of ExtractTxsFromResponse
func (mr *HelperMockRecorder) ExtractTxsFromResponse(rawResponse interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractTxsFromResponse", reflect.TypeOf((*Helper)(nil).ExtractTxsFromResponse), rawResponse)
}
