// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metric.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MetricType int32

const (
	// NOTHING should not be used.
	MetricType_NOTHING MetricType = 0
	// Metric for p2p network transfer
	MetricType_P2P_NETWORK MetricType = 1
)

var MetricType_name = map[int32]string{
	0: "NOTHING",
	1: "P2P_NETWORK",
}

var MetricType_value = map[string]int32{
	"NOTHING":     0,
	"P2P_NETWORK": 1,
}

func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}

func (MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{0}
}

type MetricsRequest struct {
	Types                []MetricType `protobuf:"varint,1,rep,packed,name=types,proto3,enum=types.MetricType" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MetricsRequest) Reset()         { *m = MetricsRequest{} }
func (m *MetricsRequest) String() string { return proto.CompactTextString(m) }
func (*MetricsRequest) ProtoMessage()    {}
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{0}
}

func (m *MetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsRequest.Unmarshal(m, b)
}
func (m *MetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsRequest.Marshal(b, m, deterministic)
}
func (m *MetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsRequest.Merge(m, src)
}
func (m *MetricsRequest) XXX_Size() int {
	return xxx_messageInfo_MetricsRequest.Size(m)
}
func (m *MetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsRequest proto.InternalMessageInfo

func (m *MetricsRequest) GetTypes() []MetricType {
	if m != nil {
		return m.Types
	}
	return nil
}

type Metrics struct {
	Peers                []*PeerMetric `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{1}
}

func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetPeers() []*PeerMetric {
	if m != nil {
		return m.Peers
	}
	return nil
}

type PeerMetric struct {
	PeerID               []byte   `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	SumIn                int64    `protobuf:"varint,2,opt,name=sumIn,proto3" json:"sumIn,omitempty"`
	AvrIn                int64    `protobuf:"varint,3,opt,name=avrIn,proto3" json:"avrIn,omitempty"`
	SumOut               int64    `protobuf:"varint,4,opt,name=sumOut,proto3" json:"sumOut,omitempty"`
	AvrOut               int64    `protobuf:"varint,5,opt,name=avrOut,proto3" json:"avrOut,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerMetric) Reset()         { *m = PeerMetric{} }
func (m *PeerMetric) String() string { return proto.CompactTextString(m) }
func (*PeerMetric) ProtoMessage()    {}
func (*PeerMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_da41641f55bff5df, []int{2}
}

func (m *PeerMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerMetric.Unmarshal(m, b)
}
func (m *PeerMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerMetric.Marshal(b, m, deterministic)
}
func (m *PeerMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerMetric.Merge(m, src)
}
func (m *PeerMetric) XXX_Size() int {
	return xxx_messageInfo_PeerMetric.Size(m)
}
func (m *PeerMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerMetric.DiscardUnknown(m)
}

var xxx_messageInfo_PeerMetric proto.InternalMessageInfo

func (m *PeerMetric) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *PeerMetric) GetSumIn() int64 {
	if m != nil {
		return m.SumIn
	}
	return 0
}

func (m *PeerMetric) GetAvrIn() int64 {
	if m != nil {
		return m.AvrIn
	}
	return 0
}

func (m *PeerMetric) GetSumOut() int64 {
	if m != nil {
		return m.SumOut
	}
	return 0
}

func (m *PeerMetric) GetAvrOut() int64 {
	if m != nil {
		return m.AvrOut
	}
	return 0
}

func init() {
	proto.RegisterEnum("types.MetricType", MetricType_name, MetricType_value)
	proto.RegisterType((*MetricsRequest)(nil), "types.MetricsRequest")
	proto.RegisterType((*Metrics)(nil), "types.Metrics")
	proto.RegisterType((*PeerMetric)(nil), "types.PeerMetric")
}

func init() { proto.RegisterFile("metric.proto", fileDescriptor_da41641f55bff5df) }

var fileDescriptor_da41641f55bff5df = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x80, 0x8d, 0xb5, 0x1b, 0xbc, 0x8e, 0x39, 0x83, 0x48, 0x8e, 0x65, 0x17, 0xcb, 0x0e, 0x3d,
	0xd4, 0x93, 0x77, 0x45, 0x83, 0xd8, 0x96, 0x50, 0xf0, 0x28, 0x53, 0xde, 0xc1, 0x43, 0xb7, 0x98,
	0x1f, 0x83, 0xde, 0xfc, 0xd3, 0x25, 0x79, 0x61, 0x3d, 0x7e, 0xdf, 0x7b, 0x5f, 0x20, 0x0f, 0x56,
	0x23, 0x3a, 0xf3, 0xf3, 0x5d, 0x6b, 0x73, 0x74, 0x47, 0x9e, 0xbb, 0x49, 0xa3, 0xdd, 0x3e, 0xc2,
	0xfa, 0x3d, 0x6a, 0xab, 0xf0, 0xd7, 0xa3, 0x75, 0xfc, 0x1e, 0x68, 0x24, 0x58, 0x99, 0x55, 0xeb,
	0xe6, 0xa6, 0x8e, 0x54, 0xd3, 0xd6, 0x30, 0x69, 0x54, 0x29, 0x6d, 0x60, 0x99, 0xd2, 0xd0, 0x68,
	0x44, 0x43, 0x4d, 0x71, 0x6e, 0x7a, 0x44, 0x43, 0x2b, 0x8a, 0xe6, 0xdb, 0x3f, 0x06, 0x30, 0x5b,
	0x7e, 0x07, 0x8b, 0xe0, 0xe5, 0x93, 0x60, 0x25, 0xab, 0x56, 0x2a, 0x11, 0xbf, 0x85, 0xdc, 0xfa,
	0x51, 0x1e, 0xc4, 0x65, 0xc9, 0xaa, 0x4c, 0x11, 0x04, 0xbb, 0x3f, 0x19, 0x79, 0x10, 0x19, 0xd9,
	0x08, 0xe1, 0x0d, 0xeb, 0xc7, 0xce, 0x3b, 0x71, 0x15, 0x75, 0xa2, 0xe0, 0xf7, 0x27, 0x13, 0x7c,
	0x4e, 0x9e, 0x68, 0xb7, 0x03, 0x98, 0xff, 0xc2, 0x0b, 0x58, 0xb6, 0xdd, 0xf0, 0x2a, 0xdb, 0x97,
	0xcd, 0x05, 0xbf, 0x86, 0xa2, 0x6f, 0xfa, 0xcf, 0xf6, 0x79, 0xf8, 0xe8, 0xd4, 0xdb, 0x86, 0x7d,
	0x2d, 0xe2, 0xad, 0x1e, 0xfe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x5e, 0x48, 0xee, 0x3b, 0x01,
	0x00, 0x00,
}
